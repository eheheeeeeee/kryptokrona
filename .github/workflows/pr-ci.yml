name: Kryptokrona Pull Request Pipeline

on: [pull_request]

jobs:
  build:
    name: "Build: ${{ matrix.config.name }} / ${{ matrix.config.platform }}"
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: true
      matrix:
        config:
          - {
              name: "Ubuntu 20.04 GCC",
              artifact: "kryptokrona-ubuntu-20.zip",
              os: ubuntu-20.04,
              cc: "gcc",
              cxx: "g++",
              platform: x64,
            }
          - {
              name: "Ubuntu 22.04 GCC",
              artifact: "kryptokrona-ubuntu-22.zip",
              os: ubuntu-22.04,
              cc: "gcc",
              cxx: "g++",
              platform: x64,
            }
          - {
              name: "Windows Latest Visual Studio 2019",
              artifact: "kryptokrona-windows-latest.zip",
              os: windows-latest,
              cc: "cl.exe",
              cxx: "cl.exe",
              platform: x64,
            }
    steps:
      - uses: actions/checkout@v2

      # ubuntu
      - name: "Install ${{ matrix.config.name }} Dependencies "
        if: matrix.config.os == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libboost-dev libboost-all-dev libssl-dev libffi-dev python3-dev gcc-11 g++-11 git cmake librocksdb-dev cron rpcbind libboost-system1.71.0 libboost-filesystem1.71.0 libboost-thread1.71.0 libboost-date-time1.71.0 libboost-chrono1.71.0 libboost-regex1.71.0 libboost-serialization1.71.0 libboost-program-options1.71.0 libicu66

      - name: "Install ${{ matrix.config.name }} Dependencies "
        if: matrix.config.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libboost-dev libboost-all-dev libssl-dev libffi-dev python3-dev gcc-11 g++-11 git cmake librocksdb-dev cron rpcbind libboost-system1.74.0 libboost-filesystem1.74.0 libboost-thread1.74.0 libboost-date-time1.74.0 libboost-chrono1.74.0 libboost-regex1.74.0 libboost-serialization1.74.0 libboost-program-options1.74.0 libicu70

      - name: mkdir build
        if: ${{ contains(matrix.config.name, 'ubuntu') }}
        run: mkdir build

      - name: Build Ubuntu Target
        if: ${{ contains(matrix.config.name, 'ubuntu') }}
        run: |
          cmake -DBoost_ARCHITECTURE=-x64 ..
          make
        working-directory: build

      - name: Install Boost 1.74.0
        if: ${{ contains(matrix.config.name, 'windows') }}
        uses: MarkusJx/install-boost@v2.4.1
        id: install-boost
        with:
            boost_version: 1.74.0
            platform_version: 2019
            toolset: msvc

      - name: Configure CMake
        if: ${{ contains(matrix.config.name, 'windows') }}
        run: cmake . -DCMAKE_BUILD_TYPE=Release -B build
        env:
            BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}

      - name: Build Windows Target
        if: ${{ contains(matrix.config.name, 'windows') }}
        run: cmake --build build --config Release

